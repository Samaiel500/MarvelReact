{"version":3,"file":"static/js/453.e3ef6a5d.chunk.js","mappings":"oOAOMA,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAO,SAACG,EAAA,EAAD,IACX,IAAK,SACD,OAAOD,GAAiB,SAACD,EAAD,KAAgB,SAACE,EAAA,EAAD,IAC5C,IAAK,YACD,OAAO,SAACF,EAAD,IACX,IAAK,QACD,OAAO,SAAC,IAAD,IACX,QACI,MAAM,IAAIG,MAAM,4BAE3B,EA+DD,EA7DmB,WACf,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAgDJ,EAAAA,EAAAA,WAAS,GAAzD,eAAOK,EAAP,KAAyBC,EAAzB,KACA,GAAsCN,EAAAA,EAAAA,WAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KAEA,GAA2CC,EAAAA,EAAAA,KAAnCC,EAAR,EAAQA,UAAWf,EAAnB,EAAmBA,QAASgB,EAA5B,EAA4BA,WAEtBC,EAAa,SAACT,EAAQU,GACdP,GAAVO,GACAH,EAAUP,GACLW,MAAK,SAAAC,GAAG,OAAIC,EAAaD,EAAjB,IACRD,MAAK,kBAAMH,EAAW,YAAjB,GACb,EAEKK,EAAe,SAACC,GAClB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZhB,GAAc,SAAAD,GAAU,wBAAQA,IAAR,OAAuBgB,GAAvB,IACxBX,GAAoB,GACpBF,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAb,IAChBK,EAAeU,EAClB,GAEDE,EAAAA,EAAAA,YAAU,WACNR,EAAWT,GAAQ,EAEtB,GAAE,IAsBH,OACI,iBAAKkB,UAAU,eAAf,UACK3B,EAAWC,GAAS,kBAtBhB,SAAA2B,GACT,IAAMC,EAAOD,EAAIE,KAAI,SAACC,EAAMC,GACxB,IAAQC,EAAgCF,EAAhCE,GAAIC,EAA4BH,EAA5BG,MAAOC,EAAqBJ,EAArBI,UAAWC,EAAUL,EAAVK,MAC9B,OACI,eAAYT,UAAU,eAAtB,UACI,UAAC,KAAD,CAAMU,GAAE,kBAAaJ,GAArB,WACI,gBAAKK,IAAKH,EAAWI,IAAI,eAAeZ,UAAU,sBAClD,gBAAKA,UAAU,oBAAf,SAAoCO,KACpC,gBAAKP,UAAU,qBAAf,SAAqCS,GAAgB,qBAJpDJ,EAQhB,IACD,OACI,eAAIL,UAAU,eAAd,SACKE,GAGZ,CAIkCE,CAAKxB,EAAX,GAAwBI,IAC7C,mBAAQ6B,MAAO,CAAC,QAAW3B,EAAc,OAAS,SAAU4B,SAAU9B,EAAkB+B,QAAS,kBAAMxB,EAAWT,EAAjB,EAA0BkB,UAAU,mCAArI,UACI,gBAAKA,UAAU,QAAf,2BAIf,E,oBC7DD,EAhBmB,WACf,OACI,iCACI,UAACgB,EAAA,EAAD,YACI,iBACIC,KAAK,cACLC,QAAQ,mCAEZ,+CAEJ,SAACC,EAAA,EAAD,KACA,SAAC,EAAD,MAGX,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './comicsList.scss';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errrorMassage/ErrorMassage';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Spinner />;\r\n        case 'loaded':\r\n            return newItemLoading ? <Component /> : <Spinner />;\r\n        case 'confirmed':\r\n            return <Component />;\r\n        case 'error':\r\n            return <ErrorMessage />;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nconst ComicsList = () => {\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [offSet, setOffSet] = useState(30);\r\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const { getComics, process, setProcess } = useMarvelService();\r\n\r\n    const updateList = (offSet, initial) => {\r\n        initial ? setNewComicsLoading(false) : setNewComicsLoading(true);\r\n        getComics(offSet)\r\n            .then(res => onComicsList(res))\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    const onComicsList = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n        setNewComicsLoading(false);\r\n        setOffSet(offSet => offSet + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateList(offSet, true);\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    const item = arr => {\r\n        const list = arr.map((item, i) => {\r\n            const { id, title, thumbnail, price } = item;\r\n            return (\r\n                <li key={i} className=\"comics__item\">\r\n                    <Link to={`/comics/${id}`}>\r\n                        <img src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{title}</div>\r\n                        <div className=\"comics__item-price\">{price ? price : 'NOT AVALIBLE'}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {list}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {setContent(process, () => item(comicsList), newComicsLoading)}\r\n            <button style={{'display': comicsEnded ? 'none' : 'block'}} disabled={newComicsLoading} onClick={() => updateList(offSet)} className=\"button button__main button__long\">\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page whith list of our comics\"\r\n                    />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["setContent","process","Component","newItemLoading","Spinner","Error","useState","comicsList","setComicsList","offSet","setOffSet","newComicsLoading","setNewComicsLoading","comicsEnded","setComicsEnded","useMarvelService","getComics","setProcess","updateList","initial","then","res","onComicsList","newComicsList","ended","length","useEffect","className","arr","list","map","item","i","id","title","thumbnail","price","to","src","alt","style","disabled","onClick","Helmet","name","content","AppBanner"],"sourceRoot":""}